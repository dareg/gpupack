#!/bin/bash
########################################################################
#
#    Script pathpack
#    --------------
#
#    Purpose : In the framework of a pack : to find path for 
#    -------   Include/Modules and for sources (debugging case)
#
#    Usage : pathpack $1 $2
#    -----
#              $1 : files list (input)
#              $2 : modules list (input)
#
#    Environment variables :
#    ---------------------
#            MKTOP     : directory of all source files
#            MODINC    : prefix for include directory in compiler synthax
#            AWK       : awk program
#            GMKROOT   : gmkpack root directory
#            GMKINTFB  
#            GMKSYS
#
########################################################################
#

export LC_ALL=C
if [ "$ZSH_NAME" = "zsh" ] ; then
  setopt +o nomatch
fi

MyTmp=$GMKWRKDIR/pathpack
mkdir -p $MyTmp
find $MyTmp -name "*" -type f | xargs /bin/rm -f
cd $MyTmp

# Prepare local-modset directories to receive links to modules/headers:
# Modules:
touch modpath
if [ -s $2 ] ; then
  for vob in $(cat $2 | cut -d "/" -f1 | sort -u) ; do
    mkdir -p $MKMAIN/.include/$vob/modules
    echo ${MODINC}${MKMAIN}/.include/$vob/modules >> modpath
  done
fi

# Headers:
touch incpath

# faux grep -h '[ ]*[^I]*[#]\{0,1\}include[ ]*[^I]*\.[h*c*p*]"' | grep "/" \
# OK ! grep -h '^[[:space:]]*#include[[:space:]]*".*\.h"' | sort -u

# Headers can be included from sub-directories :
# in that case, just add the native directories
for prj in $(/bin/ls $MKMAIN) ; do
  find $MKMAIN/$prj -name "*.h" -o -name "*.c" -o -name "*.cc" -o -name "*.cpp" \
   | xargs grep -h '^[[:space:]]*#include[[:space:]]*".*\.h"' | grep "/" | cut -d '"' -f2 | sort -u > included_files
  if [ -s included_files ] ; then
    for ext in h c cc cpp ; do
      grep "\.${ext}$" included_files | sed "s/\/[^\/]*\.${ext}$//" > included_dirs
      if [ -s included_dirs ] ; then
        for dir in $(sort -u included_dirs) ; do
          for absdir in $(grep ".*/${dir}/[^\/]*\.${ext}$" $1 | sed "s/\/[^\/]*\.${ext}$//" | sort -u) ; do
            pathdir=$(echo $absdir | sed "s:/${dir}$::")
            if [ $(grep -c ^${MODINC}${MKMAIN}/${pathdir}$ incpath) -eq 0 ] ; then
              echo ${MODINC}${MKMAIN}/${pathdir} >> incpath
            fi
          done
        done
      fi
    done
  fi
done

# Search everywhere and link to a single directory per project :
# anything but autogenerated interfaces :
for vob in $(egrep "(\.h$|\.inc$)" $1 | grep -v "^${GMKINTFB}" | cut -d "/" -f1 | sort -u) ; do
  mkdir -p $MKMAIN/.include/$vob/headers
  echo ${MODINC}${MKMAIN}/.include/$vob/headers >> incpath
done

# Need to know where the included C files stand ; the other links can be done later.
if [ $(grep -c "\.c$" $1) -ne 0 ] ; then
  find $MKMAIN -name "*.c" | xargs grep -h '^[[:space:]]*#include[[:space:]]*".*\.c"' | cut -d '"' -f2 | sort -u > included_C
  if [ -s included_C ] ; then
    for file in $(cat included_C) ; do
      element=$(grep "$file" $1 | head -1)
      vob=$(echo $element | cut -d "/" -f1)
      if [ "$vob" ] ; then
        basefile=$(basename $element)
        if [ $(grep -c ^${MODINC}${MKMAIN}/.include/$vob/headers$ incpath) -eq 0 ] ; then
          mkdir -p      ${MKMAIN}/.include/$vob/headers
          echo ${MODINC}${MKMAIN}/.include/$vob/headers >> incpath
        fi
        if [ ! -h $MKMAIN/.include/$vob/headers/$basefile ] ; then
          \ln -sf ../../../$element $MKMAIN/.include/$vob/headers/$basefile
        fi
      fi
    done
  fi
fi

# links on headers (needed at this stage for preprocessing :
egrep "(\.h$|\.inc$)" $1 > header_list
export INCDIRS=incpath
$GMKROOT/aux/Plink.sh header_list

cat incpath modpath > new_incpath
if [ -s new_incpath ] ; then
  if [ $ICS_ECHO -gt 1 ] ; then
    echo Include path :
    cat new_incpath
  fi
  cat incpath >> $MKTOP/.incpath.local
  cat modpath >> $MKTOP/.modpath.local
fi

# Local source paths :
# ------------------
egrep "(\.F90$|\.F$|\.f90$|\.f$|\.c$|\.cpp$|\.cc$)" $1 | sed -e "s/\/[^/]*$//" | sort -u > new_srcpath
if [ -s new_srcpath ] ; then
  if [ $ICS_ECHO -gt 1 ] ; then
    echo Sources path :
    cat new_srcpath
  fi
  cat $MKTOP/.srcpath new_srcpath 2>/dev/null | sort -u > $MKTOP/.srcpath
fi

cd $GMKWRKDIR
\rm -rf pathpack
