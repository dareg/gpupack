
# ARCHITECTURE FILE FOR IBM POWER
# ================================

# Libraries environment profile
# -----------------------------

GMK_LOCAL_PROFILE =

# Fortran (cross-)compiler
# ------------------------

FRTNAME = $GMK_SUPPORT/wrapper/mpxlf95_r

# C (cross-)compiler
# ------------------

VCCNAME = mpcc_r

# C++ (cross-)compiler
# ------------------

CXXNAME = mpCC_r

# CUDA (cross-)compiler
# ---------------------

CCUNAME = nvcc

# Native C compiler
# -----------------

CCNATIVE = cc_r

# Native C linker flags
# ---------------------

LNK_MPCCNATIVE =

# fypp preprocessor
# -----------------

GMK_FYPP =

# fypp preprocessor background flags
# ----------------------------------

GMK_FYPP_FLAGS = -m os -m yaml

# Fortran compiler default version (stamp)
# ----------------------------------------

LIBFRT = echo $(xlf95 -qversion | cut -d"(" -f1 | awk '{print $NF}' | head -1 | sed 's/\.//' | sed 's/V/XLF/')

# Basic compilation flags
# -----------------------

FRTFLAGS = -c -q64=largetype -qextname -NS32648 -qxlf90=nosignedzero -qpic
VCCFLAGS = -c -q64 -qsmp=omp -qpic
CCUFLAGS = -c -D__CUDACC__ -DNVCC
# Option -C in order to create files without compiling inside odb98
# In order to have any effect from the following -1 or -A options,
# -O3 optimization level must be activated.
ODBFLAGS = -C -O3

# Fortran double precision flags
# ------------------------------
DBL_FRTFLAGS = -qrealsize=8

# Fortran Cpp + extensions flags
# ------------------------------
F77_CPPFLAG = -qsuffix=cpp=F
F90_CPPFLAG = -qsuffix=cpp=F90
F77_NOCPPFLAG = -qsuffix=f=f
F90_NOCPPFLAG = -qsuffix=f=f90

# Fortran format flag
# --------------------
FREE_FRTFLAG = -qfree=F90
FIXED_FRTFLAG = -qfixed

# Optimized compilation flag
# --------------------------

OPT_FRTFLAGS = -O3 -qmaxmem=-1 -qstrict -qnohot -g
OPT_VCCFLAGS = -O3 -qmaxmem=-1 -qstrict -qnohot
OPT_CCUFLAGS =

# Debugging compilation flag
# --------------------------

DBG_FRTFLAGS = -g -O0

# Bound checking compilation flag
# -------------------------------
#
BCD_FRTFLAGS = -C

# NaN pre-initialisation flag
# ---------------------------

NAN_FRTFLAGS = -qinitauto=7FF77777 -qsigtrap -qflttrap=inv:en

# Listing compilation flag
# ------------------------

LIST_FRTFLAGS = -qsource > /dev/null
LIST_VCCFLAGS = -qsource

# Filename extension for listing
# ------------------------------

LIST_EXTENSION = lst

# Additive compilation flags
# --------------------------

MACROS_FRT = -WF,-DHIGHRES,-DADDRESS64
MACROS_CC = -DRS6K -DHPM
MACROS_CXX = -std=c++11 
MACROS_CCU = 
MACROS_ODB98 = -DRS6K -DXPRIVATE=PRIVATE -UINTERCEPT_ALLOC -UUSE_ALLOCA_H -DWITHOUT_OML
MACROS_BL95 = -DRS6K -DIS_MAIN_PROG -DSTATIC_LINKING

GMK_FCFLAGS_MPA = -qrealsize=8 -qdpc=e
GMK_FCFLAGS_PHYEX = -qrealsize=8 -qdpc=e
GMK_FCFLAGS_MSE = -qrealsize=8 -WF,-DAIX64
GMK_FCFLAGS_SURFEX = -qrealsize=8 -qnoescape -WF,-Din_surfex,-DSFX_ARO,-DSFX_ASC,-DSFX_OL,-DSFX_TXT,-DSFX_FA,-DSFX_LFI,-DARO,-DOL,-DASC,-DTXT,-DFA,-DLFI,-DAIX64

GMK_FCFLAGS_SATRAD = -WF,-D_RTTOV_DO_DISTRIBCOEF,-DRTTOV_ECMWF,-D_RTTOV_HDF,-DWITHOUT_EMOSLIB
GMK_FCFLAGS_IFSAUX =

GMK_CFLAGS_IFSAUX = -DPOINTER_64
GMK_CFLAGS_ODB = -DSTATIC_LINKING -DXPRIVATE=PRIVATE -DINTERCEPT_ALLOC -DUSE_ALLOCA_H -DCANARI -DHAS_LAPACK
GMK_CFLAGS_BLACKLIST = -DSTATIC_LINKING -DXPRIVATE=PRIVATE -DINTERCEPT_ALLOC -DUSE_ALLOCA_H

GMK_FCFLAGS_TRANS = -WF,-DWITH_FFTW
GMK_FCFLAGS_ETRANS = -WF,-DWITH_FFTW

# Fortran (cross-)linker
# ----------------------

LNK_STD = xlf95_r

# Message Passing Fortran (cross-)linker
# --------------------------------------

LNK_MPI = mpxlf95_r

# C (cross-)linker
# -----------------

LNK_CC = mpcc_r -lrt

# CXX (cross-)linker (for mixed langages c++ and fortran)
# -------------------------------------------------------

LNK_CXX = mpCC_r

# Fortran linking flags
# ----------------------

LNK_FLAGS = -b64 -qsmp=omp -bbigtoc -bmaxstack:0x8000000000 -lrt

# Additional linking flags to LNK_FLAGS for c++ executable
# --------------------------------------------------------

LNK_CXX_FLAGS = 

# flags for executable targets
# ----------------------------

LNK_EXEC =

# flags for shared object targets
# -------------------------------

LNK_SOLIB = -shared

# Fortran Flag for start/end group libraries
# ------------------------------------------

LNK_STARTG = -breorder
LNK_ENDG   =

# Flag for linking with whole static libraries
# ---------------------------------  ---------

LNK_WHOLE_ARCHIVE = -Wl,-whole-archive
LNK_NO_WHOLE_ARCHIVE = -Wl,-no-whole-archive

# Flags for static/dynamic linking
# --------------------------------

LNK_STATIC = -Wl,-Bstatic
LNK_DYNAMIC = -Wl,-Bdynamic

# Load map flag
# -------------

LNK_MAP = -bmap:./map.$$ -bloadmap:./loadmap.$$

# Hub
# ---
# Hub general directory
GMK_HUB_DIR      = hub
# Hub general installation directory (must be at a fixed place inside the pack in order to be propagated)
GMK_HUB_INSTALL  = install
# Hub general build directory (absolute path because it may be a non-permanent directory in production mode) :
GMK_HUB_BUILD    = \${TARGET_PACK}/\${GMK_HUB_DIR}/\${GMKLOCAL}/build

# List of projects in hub (ordered sort to enable dependencies)
GMK_HUB_PROJECTS = ecSDK OOPS Atlas Fiat Ectrans

GMK_HUB_LIBRARIES_IN_ecSDK = ecbuild eckit fckit
GMK_HUB_METHOD_FOR_ecSDK = cmake

GMK_HUB_LIBRARIES_IN_OOPS = oops_src
GMK_HUB_METHOD_FOR_OOPS = cmake

GMK_HUB_LIBRARIES_IN_Atlas = atlas
GMK_HUB_METHOD_FOR_Atlas = cmake

GMK_HUB_LIBRARIES_IN_Fiat = fiat
GMK_HUB_METHOD_FOR_Fiat = cmake

GMK_HUB_LIBRARIES_IN_Ectrans = ectrans
GMK_HUB_METHOD_FOR_Ectrans = cmake

GMK_CMAKE_ecbuild = -Wno-deprecated -Wno-dev -DCMAKE_C_COMPILER=\${VCCNAME}

GMK_CMAKE_eckit = -Wno-deprecated -Wno-dev -DCMAKE_C_COMPILER=\${VCCNAME} -DCMAKE_C_FLAGS=\"${VCCFLAGS} ${OPT_VCCFLAGS}\" -DCMAKE_CXX_COMPILER=\${CXXNAME} -DCMAKE_CXX_FLAGS=\"${VCCFLAGS} ${OPT_VCCFLAGS} ${MACROS_CXX}\" -DCMAKE_BUILD_TYPE=NONE -DENABLE_ECKIT_CMD=OFF -DENABLE_ECKIT_SQL=OFF -DENABLE_BZIP2=OFF -DENABLE_SNAPPY=OFF -DENABLE_LAPACK=OFF -DENABLE_CURL=OFF -DENABLE_DOCS=OFF -DENABLE_SSL=OFF -DBUILD_SHARED_LIBS=BOTH -DECBUILD_2_COMPAT=ON -DECBUILD_2_COMPAT_DEPRECATE=OFF

GMK_CMAKE_fckit = -Wno-deprecated -Wno-dev -DCMAKE_CXX_COMPILER=\${CXXNAME} -DCMAKE_CXX_FLAGS=\"${VCCFLAGS} ${OPT_VCCFLAGS} ${MACROS_CXX}\" -DCMAKE_Fortran_COMPILER=\${FRTNAME} -DCMAKE_Fortran_FLAGS=\"${FRTFLAGS} ${OPT_FRTFLAGS}\" -DCMAKE_BUILD_TYPE=NONE -DCMAKE_PREFIX_PATH=\${TARGET_PACK}/\${GMK_HUB_DIR}/\${GMK_LAST_HUB_BRANCH}/\${GMK_HUB_INSTALL}/ecSDK -DENABLE_FINAL=OFF -DENABLE_TESTS=ON -DBUILD_SHARED_LIBS=OFF -DECBUILD_2_COMPAT=ON -DECBUILD_2_COMPAT_DEPRECATE=OFF

GMK_CMAKE_oops_src = -Wno-deprecated -Wno-dev -DCMAKE_C_COMPILER=\${VCCNAME} -DCMAKE_C_FLAGS=\"${VCCFLAGS} ${OPT_VCCFLAGS}\" -DCMAKE_CXX_COMPILER=\${CXXNAME} -DCMAKE_CXX_FLAGS=\"${VCCFLAGS} ${OPT_VCCFLAGS} ${MACROS_CXX}\" -DCMAKE_Fortran_COMPILER=\${FRTNAME} -DCMAKE_Fortran_FLAGS=\"${FRTFLAGS} ${OPT_FRTFLAGS}\" -DCMAKE_BUILD_TYPE=NONE -Decbuild_ROOT=\${TARGET_PACK}/\${GMK_HUB_DIR}/\${GMK_LAST_HUB_BRANCH}/\${GMKSRC}/ecSDK -DECKIT_PATH=\${TARGET_PACK}/\${GMK_HUB_DIR}/\${GMK_LAST_HUB_BRANCH}/\${GMK_HUB_INSTALL}/ecSDK -DFCKIT_PATH=\${TARGET_PACK}/\${GMK_HUB_DIR}/\${GMK_LAST_HUB_BRANCH}/\${GMK_HUB_INSTALL}/ecSDK -DENABLE_TESTS=ON -DBUILD_SHARED_LIBS=BOTH -DECBUILD_2_COMPAT=ON -DECBUILD_2_COMPAT_DEPRECATE=OFF -DEIGEN3_INCLUDE_DIR=

GMK_CMAKE_atlas = -Wno-deprecated -Wno-dev -DCMAKE_C_COMPILER=\${VCCNAME} -DCMAKE_C_FLAGS=\"${VCCFLAGS} ${OPT_VCCFLAGS}\" -DCMAKE_CXX_COMPILER=\${CXXNAME} -DCMAKE_CXX_FLAGS=\"${VCCFLAGS} ${OPT_VCCFLAGS} ${MACROS_CXX}\" -DCMAKE_Fortran_COMPILER=\${FRTNAME} -DATLAS_Fortran_FLAGS=\"${FRTFLAGS} ${OPT_FRTFLAGS}\" -DCMAKE_BUILD_TYPE=NONE -Decbuild_ROOT=\${TARGET_PACK}/\${GMK_HUB_DIR}/\${GMK_LAST_HUB_BRANCH}/\${GMKSRC}/ecSDK -DCMAKE_PREFIX_PATH=\${TARGET_PACK}/\${GMK_HUB_DIR}/\${GMK_LAST_HUB_BRANCH}/\${GMK_HUB_INSTALL}/ecSDK -DENABLE_TESTS=ON -DBUILD_SHARED_LIBS=OFF -DECBUILD_2_COMPAT=ON -DECBUILD_2_COMPAT_DEPRECATE=OFF

GMK_CMAKE_fiat = -Wno-deprecated -Wno-dev -DCMAKE_C_COMPILER=\${VCCNAME} -DCMAKE_C_FLAGS=\"${VCCFLAGS} ${OPT_VCCFLAGS} ${MACROS_CC} -lm\" -DCMAKE_CXX_COMPILER=\${CXXNAME} -DCMAKE_CXX_FLAGS=\"${VCCFLAGS} ${OPT_VCCFLAGS} -lm ${MACROS_CXX}\" -DCMAKE_Fortran_COMPILER=\${FRTNAME} -DCMAKE_Fortran_FLAGS=\"${FRTFLAGS} ${OPT_FRTFLAGS} ${MACROS_FRT}\" -DCMAKE_BUILD_TYPE=NONE -Decbuild_ROOT=\${TARGET_PACK}/\${GMK_HUB_DIR}/\${GMK_LAST_HUB_BRANCH}/\${GMKSRC}/ecSDK -DBUILD_SHARED_LIBS=BOTH -DENABLE_TESTS=ON -DECBUILD_2_COMPAT=ON -DECBUILD_2_COMPAT_DEPRECATE=OFF -DENABLE_SINGLE_PRECISION=OFF

GMK_CMAKE_ectrans = -Wno-deprecated -Wno-dev -DCMAKE_C_COMPILER=\${VCCNAME} -DCMAKE_C_FLAGS=\"${VCCFLAGS} ${OPT_VCCFLAGS}\" -DCMAKE_CXX_COMPILER=\${CXXNAME} -DCMAKE_CXX_FLAGS=\"${VCCFLAGS} ${OPT_VCCFLAGS} ${MACROS_CXX}\" -DCMAKE_Fortran_COMPILER=\${FRTNAME} -DCMAKE_Fortran_FLAGS=\"${FRTFLAGS} ${OPT_FRTFLAGS} ${MACROS_FRT}\" -DCMAKE_BUILD_TYPE=NONE -Decbuild_ROOT=\${TARGET_PACK}/\${GMK_HUB_DIR}/\${GMK_LAST_HUB_BRANCH}/\${GMKSRC}/ecSDK -Dfiat_ROOT=\${TARGET_PACK}/\${GMK_HUB_DIR}/\${GMK_LAST_HUB_BRANCH}/\${GMK_HUB_INSTALL}/Fiat -DENABLE_TRANSI=OFF -DBUILD_SHARED_LIBS=OFF -DENABLE_TESTS=ON -DECBUILD_2_COMPAT=ON -DECBUILD_2_COMPAT_DEPRECATE=OFF -DENABLE_SINGLE_PRECISION=OFF -DFFTW_ROOT=

# User libraries (absolute filename or short name) :
# ------------------------------------------------

# "Read Grib from BDAP":
LD_USR01 = rgb
# "Bufr decoding":
LD_USR02 = bufr
# "Gribex (or emos)":
LD_USR04 = gribex
# "ecmwf field database":
LD_USR05 = fdb
# "ecmwf wave model":
LD_USR06 = wam
# "C code generated by blacklist":
LD_USR07 =
# "Nag":
LD_USR08 = nag
# "OASIS":
LD_USR09 = oasis
# "Grib_api":
LD_USR_GRIB_API_F90 = grib_api_f90
LD_USR_GRIB_API = grib_api
# "JPEG library":
LD_USR_JPEG = jpeg2000
# "EECFI" for aeolus:
LD_USR_EECFI = eecfi
# "Netcdf :"
LD_USR_NETCDF_F = netcdff
LD_USR_NETCDF = netcdf
# "HDF5" :
LD_USR_HDF5_HLFORTRAN = hdf5hl_fortran
LD_USR_HDF5_FORTRAN = hdf5_fortran
LD_USR_HDF5_HL = hdf5_hl
LD_USR_HDF5 = hdf5
# "Meteo-France dummies library (IFS only):"
LD_USR_MF_DUMMY = mf_dummy
# "Magics :"
LD_USR_MAGPLUS = MagPlus
LD_USR_MAGICS = MagPlusSingle
# "xml :"
LD_USR_XML = xml
# "Boost" :
LD_USR_BOOST_THREAD = boost_thread
LD_USR_BOOST_SYSTEM = boost_system
LD_USR_BOOST_UNIT_TEST_FRAMEWORK = boost_unit_test_framework
LD_USR_BOOST_MPI = boost_mpi
LD_USR_BOOST_SERIALIZATION = boost_serialization
# "EC kits" :
LD_USR_FCKIT = fckit
LD_USR_ECKIT_MPI = eckit_mpi
LD_USR_ECKIT = eckit
# "OOPS" :
LD_USR_OOPS = oops
# "OOPS-neural" :
LD_USR_OOPS_NEURAL = neural
# "Atlas" :
LD_USR_ATLAS_F = atlas_f
# parkind :
LD_USR_PARKIND = parkind_
# fiat :
LD_USR_FIAT = fiat
# mpi_serial :
LD_USR_MPI_SERIAL = mpi_serial
# ectrans :
LD_USR_ECTRANS = trans_

# language libraries (absolute filename or short name) :
# ----------------------------------------------------

# Lapack:
LD_LANG01 =
# Blas:
LD_LANG02 =

# System-dependent libraries - ALWAYS LOADED - (absolute filename or short name) :
# ------------------------------------------------------------------------------

LD_SYS01 = essl
LD_SYS02 = lapack
LD_SYS03 = mass
LD_SYS04 = massv
LD_SYS05 = pmapi
LD_SYS06 =
LD_SYS07 =

# MPI libraries (absolute filename or short name) :
# -----------------------------------------------

LD_MPI01 = mpi
LD_MPI02 =
LD_MPI03 =

LD_MPI_DUMMY = mpi_dummy

# Precompiler libraries
# ----------------------

LD_LIBC  =
LD_LIBM  = -lm
LD_LIBVFL =

# External include pathes (path1:path2:...)
# ------------------------------------------

INCLUDEPATH =

# (Cross-) nm command & options for BSD format
# --------------------------------------------

NMOPTS = nm -B

# Native awk program
# ------------------

AWK = awk

# (Cross-)archive
# ---------------

AR = ar

# Native archive
# --------------

ARNATIVE = ar

# Native preprocessor
# -------------------

CPP = cpp

# cmake executable
# ----------------

GMK_CMAKE =

# Native lex program
# ------------------

LEX = flex -l

# Includes & modules
# ------------------

MODINC = -I
MODEXT = mod

# gget to recover volatile libraries
# ----------------------------------

GGET =

# External script used to generate and pre-process th blacklist file
# ------------------------------------------------------------------

GMK_BL_GENERATOR =

# Epilog of script
# ----------------

EPILOG =

# Prefix of user's $(SHELL)rc file
# --------------------------------

GMKUSERFILE = user_

# Prefix for root packs
# ---------------------

PACK_PREFIX =

# Suffix for root packs
# ---------------------

PACK_EXT =

# Binaries directory name
# -----------------------

GMKBIN = bin

# Libraries directory name
# ------------------------

GMKLIB = lib

# All-sources directory name
# --------------------------

GMKSRC = src

# Interfaces directory name for each branch
# -----------------------------------------

GMKINTFB = .intfb

# directory of .F90 files generated from .fypp files
# --------------------------------------------------

GMKFYPPF90 = .fypp

# MAIN (ie : bottom background) source directory name
# ---------------------------------------------------

GMKMAIN = main

# INTERMEDIATE (ie : intermediate background) source directory name
# -----------------------------------------------------------------

GMKINTER = inter

# LOCAL (ie : top) source directory name
# --------------------------------------

GMKLOCAL = local

# Unsatisfied external references main directory
# ----------------------------------------------

GMKUNSX = unsxref

# Quiet unsatisfied external references directory
# -----------------------------------------------

GMKUNSX_QUIET = quiet

# Verboose unsatisfied external references directory
# --------------------------------------------------

GMKUNSX_VERBOOSE = verbose

# system-program main directory
# -----------------------------

GMKSYS = sys

# Genesis file name
# -----------------

GMK_GENESIS = .genesis

# View file name
# --------------

GMK_VIEW = .gmkview

# Logfile name
# ------------

GMK_LOG = .logfile

# Scriptfile prefix
# -----------------

GMK_ICS = ics_

# Submission cards : number of nodes
# ----------------------------------

GMK_NQS_NODES = # @ node             = 1

# Submission cards : large memory
# -------------------------------

GMK_NQS_LARGE = # @ resources        = ConsumableCPUs(1) ConsumableMemory(768 MB)

# Submission cards : time limit
# -----------------------------

GMK_NQS_TIME  = # @ wall_clock_limit = 04:00:00

# Submission cards : output file KEY
# ----------------------------------

GMK_NQS_OUT_P = # @ output           =

# Submission cards : error file KEY
# ---------------------------------

GMK_NQS_ERR_P = # @ error            =

# Submission cards : output/error file stamp
# ------------------------------------------

GMK_NQS_JOBID = $(jobid)

# Submission cards : other directives
# -----------------------------------
 
GMK_NQS_OTHER = # @ job_type         = serial
GMK_NQS_OTHER = # @ input            = /dev/null
GMK_NQS_OTHER = # @ class            = ns
GMK_NQS_OTHER = # @ total_tasks      = 1
GMK_NQS_OTHER = # @ network.MPI      = css0,,us
GMK_NQS_OTHER = # @ notification     = never
GMK_NQS_OTHER = # @ queue

# Compiler feature extension for aeolus software
# ----------------------------------------------
GMK_AEOLUS_F90 = aix

# LatLon handling extension for aeolus software
# ---------------------------------------------
GMK_AEOLUS_LATLON_HANDLING = simple
