#!/bin/bash


function perl_install ()
{
  PERL=perl-5.38.0
  TAR=$PERL.tar.gz
  cd $TMP
  if [ ! -d "$PERL" ]
  then
  tar xvf "$SOURCES/$TAR"
  fi
  
  cd $PERL
  set +e
  ./Configure -des -Dusethreads -Dprefix=$INSTALL/perl 
  make -j8 install 
  set -e
}

function fypp_install ()
{
  if [ ! -d "$INSTALL/fypp" ]
  then
    git clone https://github.com/aradi/fypp.git $INSTALL/fypp
  fi
}

function yaml_install ()
{
  if [ ! -d "$INSTALL/yaml" ]
  then
    git clone https://github.com/yaml/pyyaml.git $INSTALL/yaml
  fi
}

function cmake_install ()
{
  CMAKE=cmake-3.28.2
  TAR=$CMAKE.tar.gz
  cd $TMP

  if [ ! -d "$CMAKE" ]
  then
  tar xvf "$SOURCES/$TAR"
  fi

  cd $CMAKE
  ./configure --prefix=$INSTALL/cmake
  make -j8 install
}

function vimpack_install ()
{
  cd $GPUPACK_PREFIX
  if [ ! -d "$GPUPACK_PREFIX/vimpack" ]
  then
  git clone -b dotpack https://github.com/pmarguinaud/vimpack.git
  fi
}

function common_install ()
{
  INSTALL=$GPUPACK_PREFIX/install/common
  SOURCES=$GPUPACK_PREFIX/sources
  TMP=$GPUPACK_PREFIX/tmp/$ARCH
  
  mkdir -p $INSTALL
  mkdir -p $TMP

  perl_install
  fypp_install
  yaml_install
  cmake_install
  vimpack_install
}

function check_cmake_version ()
{
  local res=$(cmake --version | head -n1 | awk '{split($3,a,".");print(a[1]==2 && a[2]<16);}')
  if [ $res -eq 1 ]; then
    echo "Your cmake is too old"
    exit 1
  fi
}

function check_perl_version ()
{
  local res=$(perl -e 'print $] <= 5.026?"1\n":"0\n";')
  if [ $res -eq 1 ]; then
    echo "Your perl is too old"
    exit 1
  fi
}

function common_check_versions ()
{
  check_cmake_version
  check_perl_version
}

